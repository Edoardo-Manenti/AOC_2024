import unittest
from aoc import part1, is_loop, part2, part2_but_faster

class AocTestClass(unittest.TestCase):
    def test_part1(self):
        test_input = """....#.....
.........#
..........
..#.......
.......#..
..........
.#..^.....
........#.
#.........
......#..."""
        value = len(part1(test_input))
        expected_value = 41
        self.assertEqual(value, expected_value)

    def test_is_loop_exp_false(self):
        test_input = """....#.....
.........#
..........
..#.......
.......#..
..........
.#..^.....
........#.
#.........
......#..."""
        room = [list(i) for i in test_input.split("\n") if len(list(i)) != 0]
        value = is_loop(room)
        expected_value = False
        self.assertEqual(value, expected_value)

    def test_is_loop_exp_true(self):
        test_input = """....#.....
.........#
..........
..#.......
.......#..
..........
.#.#^.....
........#.
#.........
......#..."""
        room = [list(i) for i in test_input.split("\n") if len(list(i)) != 0]
        value = is_loop(room)
        expected_value = True
        self.assertEqual(value, expected_value)

    def test_part2(self):
        test_input = """....#.....
.........#
..........
..#.......
.......#..
..........
.#..^.....
........#.
#.........
......#..."""
        value = part2(test_input)
        expected_value = 6
        self.assertEqual(value, expected_value)

    def test_part2_but_faster(self):
        test_input = """....#.....
.........#
..........
..#.......
.......#..
..........
.#..^.....
........#.
#.........
......#..."""
        value = part2_but_faster(test_input)
        expected_value = 6
        self.assertEqual(value, expected_value)
if __name__ == "__main__":
    unittest.main(verbosity=3)
    #suite = unittest.TestSuite()
    #suite.addTest(AocTestClass("test_part2"))
    #runner = unittest.TextTestRunner()
    #runner.run(suite)
