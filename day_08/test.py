import unittest
from aoc import part1, part2, find_antinodes

class AocTestClass(unittest.TestCase):
    def test_find_antinodes1(self):
        a1 = (1,1)
        a2 = (2,2)
        
        n1, n2 = find_antinodes(a1, a2)
        self.assertEqual(n1, (0,0))
        self.assertEqual(n2, (3,3))

        a1 = (1,2)
        a2 = (2,1)

        n1, n2 = find_antinodes(a1, a2)
        self.assertEqual(n1, (0,3))
        self.assertEqual(n2, (3,0))
        
        a1 = (2,2)
        a2 = (4,3)

        n1, n2 = find_antinodes(a1, a2)
        self.assertEqual(n1, (0,1))
        self.assertEqual(n2, (6,4))

        a1 = (1,1)
        a2 = (2,1)

        n1, n2 = find_antinodes(a1, a2)
        self.assertEqual(n1, (0,1))
        self.assertEqual(n2, (3,1))

    def test_part1(self):
        test_input = """
............
........0...
.....0......
.......0....
....0.......
......A.....
............
............
........A...
.........A..
............
............
"""
        value = part1(test_input)
        expected_value = 14
        self.assertEqual(value, expected_value)

    def test_part2_1(self):
        test_input = """
T.........
...T......
.T........
..........
..........
..........
..........
..........
..........
..........
"""
        value = part2(test_input)
        expected_value = 9
        self.assertEqual(value, expected_value)

    def test_part2_2(self):
        test_input = """
............
........0...
.....0......
.......0....
....0.......
......A.....
............
............
........A...
.........A..
............
............
"""
        value = part2(test_input)
        expected_value = 34
        self.assertEqual(value, expected_value)

if __name__ == "__main__":
    unittest.main(verbosity=3)
